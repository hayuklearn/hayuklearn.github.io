import{_ as s,c as i,o as a,R as n}from"./chunks/framework.D6kTAKe3.js";const e="/assets/001.CuibSpNG.jpg",g=JSON.parse('{"title":"Android 事件分发","description":"","frontmatter":{},"headers":[],"relativePath":"Android/事件分发/事件分发.md","filePath":"Android/事件分发/事件分发.md"}'),t={name:"Android/事件分发/事件分发.md"},l=n('<p>[TOC]</p><h1 id="android-事件分发" tabindex="-1">Android 事件分发 <a class="header-anchor" href="#android-事件分发" aria-label="Permalink to &quot;Android 事件分发&quot;">​</a></h1><ul><li>Android 事件分发就是对 MotionEvent 的分发过程</li></ul><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><p><img src="'+e+`" alt="事件分发业务流程"></p><h2 id="三个重要方法" tabindex="-1">三个重要方法 <a class="header-anchor" href="#三个重要方法" aria-label="Permalink to &quot;三个重要方法&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// \`dispatchTouchEvent\`、\`onInterceptTouchEvent\`、\`onTouchEvent\`的关系</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dispatchTouchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MotionEvent ev) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> consume </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onInterceptTouchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ev)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    consume </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onTouchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ev);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    consume </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchTouchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ev);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> consume;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 任玉刚. Android开发艺术探索 (Kindle 位置 2721-2725). 电子工业出版社. Kindle 版本.</span></span></code></pre></div><h2 id="事件监听的优先级" tabindex="-1">事件监听的优先级 <a class="header-anchor" href="#事件监听的优先级" aria-label="Permalink to &quot;事件监听的优先级&quot;">​</a></h2><ul><li><code>OnClickListener</code> &lt; <code>onTouchEvent</code> &lt; <code>OnTouchListener</code></li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>当一个 View 需要处理事件时，如果它设置了 OnTouchListener，那么 OnTouchListener 中的</span></span>
<span class="line"><span> onTouch 方法会被回调。 这时事件如何处理还要看 onTouch 的 返回值，如果返回 false，则当</span></span>
<span class="line"><span>前 View 的 onTouchEvent 方法会被调用；如果返回 true，那么 onTouchEvent 方法将不会被调</span></span>
<span class="line"><span>用。由此可见，给 View 设置的 OnTouchListener，其优先级比 onTouchEvent 要高。在</span></span>
<span class="line"><span> onTouchEvent 方法中，如果当前设置的有 OnClickListener，那么它的 onClick 方法会被调用。</span></span>
<span class="line"><span>可以看出，平时我们常用的 OnClickListener，其优先级最低，即处于事件传递的尾端。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 任玉刚. Android开发艺术探索 (Kindle 位置 2730-2734). 电子工业出版社. Kindle 版本.</span></span></code></pre></div>`,10),p=[l];function h(o,k,d,c,r,E){return a(),i("div",null,p)}const y=s(t,[["render",h]]);export{g as __pageData,y as default};
