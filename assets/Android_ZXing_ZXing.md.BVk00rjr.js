import{_ as s,c as i,o as a,R as n}from"./chunks/framework.D6kTAKe3.js";const t="/assets/scan.SB0Ff6kx.jpg",_=JSON.parse('{"title":"ZXing","description":"","frontmatter":{},"headers":[],"relativePath":"Android/ZXing/ZXing.md","filePath":"Android/ZXing/ZXing.md"}'),e={name:"Android/ZXing/ZXing.md"},l=n('<p>[TOC]</p><h1 id="zxing" tabindex="-1">ZXing <a class="header-anchor" href="#zxing" aria-label="Permalink to &quot;ZXing&quot;">​</a></h1><p><img src="'+t+`" alt=""></p><ol><li>绿角包裹的矩形区域就是解析区域</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PlanarYUVLuminanceSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 原始数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] yuvData, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataWidth, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataHeight,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // padding，解析区域左始与顶始</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> left, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> top,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 解析区域宽高范围</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 是否水平翻转</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reverseHorizontal)</span></span></code></pre></div>`,5),p=[l];function h(k,r,d,o,g,c){return a(),i("div",null,p)}const y=s(e,[["render",h]]);export{_ as __pageData,y as default};
