import{_ as t,c as e,o as a,R as i}from"./chunks/framework.D6kTAKe3.js";const m=JSON.parse('{"title":"Flutter","description":"","frontmatter":{},"headers":[],"relativePath":"Flutter/Flutter.md","filePath":"Flutter/Flutter.md"}'),l={name:"Flutter/Flutter.md"},r=i('<h1 id="flutter" tabindex="-1">Flutter <a class="header-anchor" href="#flutter" aria-label="Permalink to &quot;Flutter&quot;">​</a></h1><ol><li>Widget - StatefulWidget - StatelessWidget、StatefulWidget 生命周期</li></ol><p>initState()：Widget 初始化当前 State，在当前方法中是不能获取到 Context 的，如想获取，可以试试 Future.delayed() didChangeDependencies()：在 initState() 后调用，State对象依赖关系发生变化的时候也会调用。 deactivate()：当 State 被暂时从视图树中移除时会调用这个方法，页面切换时也会调用该方法，和Android里的 onPause 差不多。 dispose()：Widget 销毁时调用。 didUpdateWidget：Widget 状态发生变化的时候调用。</p><ol start="2"><li>Widget、Element、RenderObject 渲染树</li></ol><p>Widget：仅用于存储渲染所需要的信息。</p><p>RenderObject：负责管理布局、绘制等操作。</p><p>Element：才是这颗巨大的控件树上的实体。</p><ol start="3"><li><p>mixin 关键字</p></li><li><p>与原生工程的配合方案 - 比如 Alibaba Flutter Boost</p></li><li><p>Flutter 是如何与原生Android、iOS进行通信的？ Flutter 通过 PlatformChannel 与原生进行交互，其中 PlatformChannel 分为三种： BasicMessageChannel：用于传递字符串和半结构化的信息。 MethodChannel：用于传递方法调用（method invocation）。 EventChannel: 用于数据流（event streams）的通信。 同时 Platform Channel 并非是线程安全的</p></li><li><p>图像渲染引擎 Skia</p></li></ol><h1 id="android-多渠道、多环境打包方案" tabindex="-1">Android 多渠道、多环境打包方案 <a class="header-anchor" href="#android-多渠道、多环境打包方案" aria-label="Permalink to &quot;Android 多渠道、多环境打包方案&quot;">​</a></h1><h1 id="android-异常捕获方案" tabindex="-1">Android 异常捕获方案 <a class="header-anchor" href="#android-异常捕获方案" aria-label="Permalink to &quot;Android 异常捕获方案&quot;">​</a></h1><h1 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to &quot;设计模式&quot;">​</a></h1><p>比如</p><ol><li>责任链</li><li>代理</li><li>观察者</li></ol><h1 id="https" tabindex="-1">HTTPS <a class="header-anchor" href="#https" aria-label="Permalink to &quot;HTTPS&quot;">​</a></h1><p>防止 APP 被代理软件抓包</p><h1 id="跨域请求解决方案" tabindex="-1">跨域请求解决方案 <a class="header-anchor" href="#跨域请求解决方案" aria-label="Permalink to &quot;跨域请求解决方案&quot;">​</a></h1>',16),o=[r];function d(n,s,h,c,u,p){return a(),e("div",null,o)}const f=t(l,[["render",d]]);export{m as __pageData,f as default};
