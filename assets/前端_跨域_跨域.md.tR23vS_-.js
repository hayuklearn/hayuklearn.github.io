import{_ as a,c as e,o as n,R as s}from"./chunks/framework.D6kTAKe3.js";const b=JSON.parse('{"title":"关于跨域","description":"","frontmatter":{},"headers":[],"relativePath":"前端/跨域/跨域.md","filePath":"前端/跨域/跨域.md"}'),o={name:"前端/跨域/跨域.md"},l=s(`<p>[TOC]</p><h1 id="关于跨域" tabindex="-1">关于跨域 <a class="header-anchor" href="#关于跨域" aria-label="Permalink to &quot;关于跨域&quot;">​</a></h1><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noreferrer">阮一峰《跨域资源共享 CORS 详解》</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noreferrer">Mozilla《跨源资源共享（CORS）》</a></li><li><a href="https://www.cnblogs.com/lizhanqi/p/13564660.html" target="_blank" rel="noreferrer">博客园《Flutter web 踩坑关于浏览器的跨域的深思》</a></li><li><a href="https://ask.dcloud.net.cn/m/article/35267" target="_blank" rel="noreferrer">UNI-APP H5 跨域问题解决方案</a></li></ol><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p><code>CORS</code></p><p><code>cross-origin resource sharing</code></p><p><code>跨域资源共享</code></p><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><p>它允许浏览器向跨源服务器，发出<code>XMLHttpRequest</code>请求，从而克服了<code>AJAX</code>只能同源使用的限制。</p><h2 id="简单请求与非简单请求" tabindex="-1">简单请求与非简单请求 <a class="header-anchor" href="#简单请求与非简单请求" aria-label="Permalink to &quot;简单请求与非简单请求&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">简单请求<br><code>simple request</code></th><th style="text-align:center;">非简单请求<br><code>not-so-simple request</code></th></tr></thead></table><h3 id="简单请求" tabindex="-1">简单请求 <a class="header-anchor" href="#简单请求" aria-label="Permalink to &quot;简单请求&quot;">​</a></h3><h4 id="条件" tabindex="-1">条件 <a class="header-anchor" href="#条件" aria-label="Permalink to &quot;条件&quot;">​</a></h4><h5 id="条件一" tabindex="-1">条件一 <a class="header-anchor" href="#条件一" aria-label="Permalink to &quot;条件一&quot;">​</a></h5><p>以下三种请求方式之一：</p><ol><li><code>HEAD</code></li><li><code>GET</code></li><li><code>POST</code></li></ol><h5 id="条件二" tabindex="-1">条件二 <a class="header-anchor" href="#条件二" aria-label="Permalink to &quot;条件二&quot;">​</a></h5><p>不超过以下五种请求头部：</p><ol><li><code>Accept</code></li><li><code>Accept-Language</code></li><li><code>Content-Language</code></li><li><code>Last-Event-ID</code></li><li><code>Content-Type</code>：仅限<code>application/x-www-form-urlencoded</code> <code>multipart/form-data</code> <code>text/plain</code>之一</li></ol><h3 id="非简单请求" tabindex="-1">非简单请求 <a class="header-anchor" href="#非简单请求" aria-label="Permalink to &quot;非简单请求&quot;">​</a></h3><h4 id="条件-1" tabindex="-1">条件 <a class="header-anchor" href="#条件-1" aria-label="Permalink to &quot;条件&quot;">​</a></h4><p><code>PUT</code>或<code>DELETE</code>或者<code>Content-Type</code>字段的类型是<code>application/json</code></p><h4 id="预检preflight" tabindex="-1">预检<code>preflight</code> <a class="header-anchor" href="#预检preflight" aria-label="Permalink to &quot;预检\`preflight\`&quot;">​</a></h4><h3 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h3><div class="language-flow vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">flow</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>st=&gt;start: 浏览器开始</span></span>
<span class="line"><span>cond-is-simple-request=&gt;condition: 是否简单请求</span></span>
<span class="line"><span>op01=&gt;operation: 增加一个Origin头部</span></span>
<span class="line"><span>op02=&gt;operation: 发送给服务端</span></span>
<span class="line"><span>cond-is-origin-allow=&gt;condition: Origin</span></span>
<span class="line"><span>是否在许可范围内</span></span>
<span class="line"><span>op03=&gt;operation: 服务端响应包含</span></span>
<span class="line"><span>Access-Control-Allow-Origin</span></span>
<span class="line"><span>Access-Control-Allow-Credentials</span></span>
<span class="line"><span>Access-Control-Expose-Headers</span></span>
<span class="line"><span>Content-Type</span></span>
<span class="line"><span>op04=&gt;operation: 服务端响应不包含</span></span>
<span class="line"><span>Access-Control-Allow-Origin</span></span>
<span class="line"><span>op05=&gt;operation: 预检preflight</span></span>
<span class="line"><span>cond-preflight=&gt;condition: Origin</span></span>
<span class="line"><span>是否在许可范围内</span></span>
<span class="line"><span>op06=&gt;operation: 正常请求</span></span>
<span class="line"><span>op07=&gt;operation: 跨域报错</span></span>
<span class="line"><span></span></span>
<span class="line"><span>e=&gt;end: 结束</span></span>
<span class="line"><span></span></span>
<span class="line"><span>st-&gt;cond-is-simple-request</span></span>
<span class="line"><span>cond-is-simple-request(yes)-&gt;op01-&gt;op02-&gt;cond-is-origin-allow</span></span>
<span class="line"><span>cond-is-simple-request(no)-&gt;op05-&gt;cond-preflight</span></span>
<span class="line"><span>cond-is-origin-allow(yes)-&gt;op03-&gt;e</span></span>
<span class="line"><span>cond-is-origin-allow(no)-&gt;op04-&gt;op07-&gt;e</span></span>
<span class="line"><span>cond-preflight(yes, right)-&gt;op06-&gt;e</span></span>
<span class="line"><span>cond-preflight(no)-&gt;op04</span></span></code></pre></div><h2 id="解决跨域报错问题" tabindex="-1">解决跨域报错问题 <a class="header-anchor" href="#解决跨域报错问题" aria-label="Permalink to &quot;解决跨域报错问题&quot;">​</a></h2><ol><li>Chrome 浏览器禁用安全设置</li></ol><p><code>&quot;{PATH_FOR_CHROME}\\chrome.exe&quot; --disable-web-security --user-data-dir={USER_DATA_PATH}</code></p><ol start="2"><li><p>服务端设置允许跨域</p></li><li><p><code>Nginx</code>转发客户端请求时，加上<code>Access-Control-Allow-Origin: *</code>请求头</p></li><li><p><code>jsonp</code>解决方案是利用<code>script</code>标签支持跨域加载，但是<code>script</code>都是通过<code>get</code>请求，因此<code>josnp</code>发送的都是<code>get</code>请求，因此无法<code>post</code>数据</p></li></ol>`,30),t=[l];function i(p,c,r,d,h,g){return n(),e("div",null,t)}const f=a(o,[["render",i]]);export{b as __pageData,f as default};
