import{_ as e,c as a,o as t,R as o}from"./chunks/framework.D6kTAKe3.js";const m=JSON.parse('{"title":"HASH 模式 & HISTORY 模式","description":"","frontmatter":{},"headers":[],"relativePath":"前端/路由/路由.md","filePath":"前端/路由/路由.md"}'),r={name:"前端/路由/路由.md"},l=o('<p>[TOC]</p><h1 id="hash-模式-history-模式" tabindex="-1">HASH 模式 &amp; HISTORY 模式 <a class="header-anchor" href="#hash-模式-history-模式" aria-label="Permalink to &quot;HASH 模式 &amp; HISTORY 模式&quot;">​</a></h1><h2 id="hash-模式" tabindex="-1">HASH 模式 <a class="header-anchor" href="#hash-模式" aria-label="Permalink to &quot;HASH 模式&quot;">​</a></h2><h2 id="history-模式" tabindex="-1">HISTORY 模式 <a class="header-anchor" href="#history-模式" aria-label="Permalink to &quot;HISTORY 模式&quot;">​</a></h2><p>使用<code>window.history</code>中的方法，常见的操作有：</p><ol><li><code>back()</code>：后退到上一个路由；</li><li><code>forward()</code>：前进到下一个路由，如果有的话；</li><li><code>go(number)</code>：进入到任意一个路由，正数为前进，负数为后退；</li><li><code>pushState(obj, title, url)</code>：前进到指定的 url，不刷新页面；</li><li><code>replaceState(obj, title, url)</code>：用 url 替换当前的路由，不刷新页面；</li></ol><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ol><li><a href="https://zhuanlan.zhihu.com/p/130995492" target="_blank" rel="noreferrer">知乎链接</a></li><li><a href="https://www.cnblogs.com/tugenhua0707/p/10859214.html" target="_blank" rel="noreferrer">博客园链接</a></li></ol>',8),i=[l];function h(c,s,n,d,_,p){return t(),a("div",null,i)}const f=e(r,[["render",h]]);export{m as __pageData,f as default};
